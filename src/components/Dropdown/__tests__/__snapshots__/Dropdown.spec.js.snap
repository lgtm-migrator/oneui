// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown isOpen should open and close list of items 1`] = `
<Dropdown
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  isOpen={true}
  items={
    Array [
      "testValue",
    ]
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <Button
    aria-expanded={true}
    aria-haspopup="listbox"
    aria-labelledby="downshift-50-label downshift-50-toggle-button"
    context="brand"
    disabled={false}
    id="downshift-50-toggle-button"
    isBlock={false}
    isInline={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    size="normal"
    type="button"
  >
    <button
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-50-label downshift-50-toggle-button"
      className="Button Button--context_brand"
      disabled={false}
      id="downshift-50-toggle-button"
      onClick={[Function]}
      onKeyDown={[Function]}
      type="button"
    >
      Click me!
    </button>
  </Button>
  <List
    aria-labelledby="downshift-50-label"
    className="Dropdown__list"
    doSelectOnNavigate={false}
    id="downshift-50-menu"
    isControlledNavigation={true}
    isDivided={false}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    style={
      Object {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
    tabIndex={-1}
  >
    <ul
      aria-labelledby="downshift-50-label"
      className="List Dropdown__list"
      id="downshift-50-menu"
      onBlur={[Function]}
      onKeyDown={[Function]}
      onMouseLeave={[Function]}
      role="listbox"
      style={
        Object {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
      tabIndex={-1}
    >
      <ListItem
        aria-selected="false"
        className="List__item"
        disabled={false}
        highlightContext="default"
        id="downshift-50-item-0"
        isHighlighted={false}
        isSelected={false}
        key=".0"
        onClick={[Function]}
        onMouseMove={[Function]}
        role="option"
      >
        <li
          aria-selected="false"
          className="ListItem ListItem--clickable List__item"
          id="downshift-50-item-0"
          onMouseMove={[Function]}
          role="option"
        >
          <div
            className="ListItem__container"
            onClick={[Function]}
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                With value
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
    </ul>
  </List>
</Dropdown>
`;

exports[`Dropdown isOpen should open and close list of items 2`] = `
<Dropdown
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  isOpen={false}
  items={
    Array [
      "testValue",
    ]
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <Button
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby="downshift-50-label downshift-50-toggle-button"
    context="brand"
    disabled={false}
    id="downshift-50-toggle-button"
    isBlock={false}
    isInline={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    size="normal"
    type="button"
  >
    <button
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-labelledby="downshift-50-label downshift-50-toggle-button"
      className="Button Button--context_brand"
      disabled={false}
      id="downshift-50-toggle-button"
      onClick={[Function]}
      onKeyDown={[Function]}
      type="button"
    >
      Click me!
    </button>
  </Button>
  <List
    aria-labelledby="downshift-50-label"
    doSelectOnNavigate={false}
    id="downshift-50-menu"
    isControlledNavigation={true}
    isDivided={false}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    tabIndex={-1}
  >
    <ul
      aria-labelledby="downshift-50-label"
      className="List"
      id="downshift-50-menu"
      onBlur={[Function]}
      onKeyDown={[Function]}
      onMouseLeave={[Function]}
      role="listbox"
      tabIndex={-1}
    />
  </List>
</Dropdown>
`;

exports[`Dropdown should downshift only by enabled items with value 1`] = `
<Dropdown
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  items={
    Array [
      "1",
      "2",
    ]
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <Button
    aria-expanded={true}
    aria-haspopup="listbox"
    aria-labelledby="downshift-12-label downshift-12-toggle-button"
    context="brand"
    disabled={false}
    id="downshift-12-toggle-button"
    isBlock={false}
    isInline={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    size="normal"
    type="button"
  >
    <button
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-12-label downshift-12-toggle-button"
      className="Button Button--context_brand"
      disabled={false}
      id="downshift-12-toggle-button"
      onClick={[Function]}
      onKeyDown={[Function]}
      type="button"
    >
      Click me!
    </button>
  </Button>
  <List
    aria-labelledby="downshift-12-label"
    className="Dropdown__list"
    doSelectOnNavigate={false}
    id="downshift-12-menu"
    isControlledNavigation={true}
    isDivided={false}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    style={
      Object {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
    tabIndex={-1}
  >
    <ul
      aria-labelledby="downshift-12-label"
      className="List Dropdown__list"
      id="downshift-12-menu"
      onBlur={[Function]}
      onKeyDown={[Function]}
      onMouseLeave={[Function]}
      role="listbox"
      style={
        Object {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
      tabIndex={-1}
    >
      <ListItem
        disabled={true}
        highlightContext="default"
        isHighlighted={false}
        isSelected={false}
      >
        <li
          className="ListItem ListItem--disabled"
        >
          <div
            className="ListItem__container"
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                Disabled
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
      <ListItem
        aria-selected="false"
        disabled={false}
        highlightContext="default"
        id="downshift-12-item-0"
        isHighlighted={false}
        isSelected={false}
        onClick={[Function]}
        onMouseMove={[Function]}
        role="option"
      >
        <li
          aria-selected="false"
          className="ListItem ListItem--clickable"
          id="downshift-12-item-0"
          onMouseMove={[Function]}
          role="option"
        >
          <div
            className="ListItem__container"
            onClick={[Function]}
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                With value 1
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
      <ListItem
        disabled={false}
        highlightContext="default"
        isHighlighted={false}
        isSelected={false}
      >
        <li
          className="ListItem"
        >
          <div
            className="ListItem__container"
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                Without value
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
      <div
        className="customDiv"
      >
        Div
      </div>
      <ListItem
        aria-selected="false"
        disabled={false}
        highlightContext="default"
        id="downshift-12-item-1"
        isHighlighted={false}
        isSelected={false}
        onClick={[Function]}
        onMouseMove={[Function]}
        role="option"
      >
        <li
          aria-selected="false"
          className="ListItem ListItem--clickable"
          id="downshift-12-item-1"
          onMouseMove={[Function]}
          role="option"
        >
          <div
            className="ListItem__container"
            onClick={[Function]}
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                With value 2
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
    </ul>
  </List>
</Dropdown>
`;

exports[`Dropdown should render correctly closed 1`] = `
<Dropdown
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  items={
    Array [
      "first-value",
    ]
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <Button
    aria-haspopup="listbox"
    aria-labelledby="downshift-0-label downshift-0-toggle-button"
    context="brand"
    disabled={false}
    id="downshift-0-toggle-button"
    isBlock={false}
    isInline={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    size="normal"
    type="button"
  >
    <button
      aria-haspopup="listbox"
      aria-labelledby="downshift-0-label downshift-0-toggle-button"
      className="Button Button--context_brand"
      disabled={false}
      id="downshift-0-toggle-button"
      onClick={[Function]}
      onKeyDown={[Function]}
      type="button"
    >
      Click me!
    </button>
  </Button>
  <List
    aria-labelledby="downshift-0-label"
    doSelectOnNavigate={false}
    id="downshift-0-menu"
    isControlledNavigation={true}
    isDivided={false}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    tabIndex={-1}
  >
    <ul
      aria-labelledby="downshift-0-label"
      className="List"
      id="downshift-0-menu"
      onBlur={[Function]}
      onKeyDown={[Function]}
      onMouseLeave={[Function]}
      role="listbox"
      tabIndex={-1}
    />
  </List>
</Dropdown>
`;

exports[`Dropdown should render correctly opened 1`] = `
<Dropdown
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  items={
    Array [
      "first-value",
    ]
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <Button
    aria-expanded={true}
    aria-haspopup="listbox"
    aria-labelledby="downshift-3-label downshift-3-toggle-button"
    context="brand"
    disabled={false}
    id="downshift-3-toggle-button"
    isBlock={false}
    isInline={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    size="normal"
    type="button"
  >
    <button
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-3-label downshift-3-toggle-button"
      className="Button Button--context_brand"
      disabled={false}
      id="downshift-3-toggle-button"
      onClick={[Function]}
      onKeyDown={[Function]}
      type="button"
    >
      Click me!
    </button>
  </Button>
  <List
    aria-labelledby="downshift-3-label"
    className="Dropdown__list"
    doSelectOnNavigate={false}
    id="downshift-3-menu"
    isControlledNavigation={true}
    isDivided={false}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    style={
      Object {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
    tabIndex={-1}
  >
    <ul
      aria-labelledby="downshift-3-label"
      className="List Dropdown__list"
      id="downshift-3-menu"
      onBlur={[Function]}
      onKeyDown={[Function]}
      onMouseLeave={[Function]}
      role="listbox"
      style={
        Object {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
      tabIndex={-1}
    >
      <ListItem
        disabled={true}
        highlightContext="default"
        isHighlighted={false}
        isSelected={false}
      >
        <li
          className="ListItem ListItem--disabled"
        >
          <div
            className="ListItem__container"
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                Disabled
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
      <ListItem
        aria-selected="false"
        disabled={false}
        highlightContext="default"
        id="downshift-3-item-0"
        isHighlighted={false}
        isSelected={false}
        onClick={[Function]}
        onMouseMove={[Function]}
        role="option"
      >
        <li
          aria-selected="false"
          className="ListItem ListItem--clickable"
          id="downshift-3-item-0"
          onMouseMove={[Function]}
          role="option"
        >
          <div
            className="ListItem__container"
            onClick={[Function]}
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                With value
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
    </ul>
  </List>
</Dropdown>
`;

exports[`Dropdown should render correctly with mixed children: array and single ListItem 1`] = `
<Dropdown
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  items={
    Array [
      "one",
      "two",
    ]
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <Button
    aria-expanded={true}
    aria-haspopup="listbox"
    aria-labelledby="downshift-41-label downshift-41-toggle-button"
    context="brand"
    disabled={false}
    id="downshift-41-toggle-button"
    isBlock={false}
    isInline={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    size="normal"
    type="button"
  >
    <button
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-41-label downshift-41-toggle-button"
      className="Button Button--context_brand"
      disabled={false}
      id="downshift-41-toggle-button"
      onClick={[Function]}
      onKeyDown={[Function]}
      type="button"
    >
      Click me!
    </button>
  </Button>
  <List
    aria-labelledby="downshift-41-label"
    className="Dropdown__list"
    doSelectOnNavigate={false}
    id="downshift-41-menu"
    isControlledNavigation={true}
    isDivided={false}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    style={
      Object {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
    tabIndex={-1}
  >
    <ul
      aria-labelledby="downshift-41-label"
      className="List Dropdown__list"
      id="downshift-41-menu"
      onBlur={[Function]}
      onKeyDown={[Function]}
      onMouseLeave={[Function]}
      role="listbox"
      style={
        Object {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
      tabIndex={-1}
    >
      <ListItem
        disabled={true}
        highlightContext="default"
        isHighlighted={false}
        isSelected={false}
      >
        <li
          className="ListItem ListItem--disabled"
        >
          <div
            className="ListItem__container"
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                Disabled
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
      <ListItem
        aria-selected="false"
        disabled={false}
        highlightContext="default"
        id="downshift-41-item-0"
        isHighlighted={false}
        isSelected={false}
        key="one"
        onClick={[Function]}
        onMouseMove={[Function]}
        role="option"
      >
        <li
          aria-selected="false"
          className="ListItem ListItem--clickable"
          id="downshift-41-item-0"
          onMouseMove={[Function]}
          role="option"
        >
          <div
            className="ListItem__container"
            onClick={[Function]}
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                one
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
      <ListItem
        aria-selected="false"
        disabled={false}
        highlightContext="default"
        id="downshift-41-item-1"
        isHighlighted={false}
        isSelected={false}
        key="two"
        onClick={[Function]}
        onMouseMove={[Function]}
        role="option"
      >
        <li
          aria-selected="false"
          className="ListItem ListItem--clickable"
          id="downshift-41-item-1"
          onMouseMove={[Function]}
          role="option"
        >
          <div
            className="ListItem__container"
            onClick={[Function]}
            role="presentation"
          >
            <Text
              context="default"
              inline={true}
              key=".0"
              size="normal"
            >
              <span>
                two
              </span>
            </Text>
          </div>
        </li>
      </ListItem>
    </ul>
  </List>
</Dropdown>
`;
